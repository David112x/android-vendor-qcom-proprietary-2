// This file is autogenerated by hidl-gen. Do not edit manually.

filegroup {
    name: "vendor.qti.dvr@1.0_hal",
    srcs: [
        "IDvr.hal",
    ],
}

genrule {
    name: "vendor.qti.dvr@1.0_genc++",
    tools: ["hidl-gen"],
    cmd: "$(location hidl-gen) -o $(genDir) -Lc++-sources -randroid.hidl:system/libhidl/transport -rvendor.qti:vendor/qcom/proprietary/interfaces vendor.qti.dvr@1.0",
    srcs: [
        ":vendor.qti.dvr@1.0_hal",
    ],
    out: [
        "vendor/qti/dvr/1.0/DvrAll.cpp",
    ],
}

genrule {
    name: "vendor.qti.dvr@1.0_genc++_headers",
    tools: ["hidl-gen"],
    cmd: "$(location hidl-gen) -o $(genDir) -Lc++-headers -randroid.hidl:system/libhidl/transport -rvendor.qti:vendor/qcom/proprietary/interfaces vendor.qti.dvr@1.0",
    srcs: [
        ":vendor.qti.dvr@1.0_hal",
    ],
    out: [
        "vendor/qti/dvr/1.0/IDvr.h",
        "vendor/qti/dvr/1.0/IHwDvr.h",
        "vendor/qti/dvr/1.0/BnHwDvr.h",
        "vendor/qti/dvr/1.0/BpHwDvr.h",
        "vendor/qti/dvr/1.0/BsDvr.h",
    ],
}

cc_library {
    name: "vendor.qti.dvr@1.0",
    defaults: ["hidl-module-defaults"],
    generated_sources: ["vendor.qti.dvr@1.0_genc++"],
    generated_headers: ["vendor.qti.dvr@1.0_genc++_headers"],
    export_generated_headers: ["vendor.qti.dvr@1.0_genc++_headers"],
    vendor_available: true,
    product_specific: true,
//    vndk: {
//        enabled: true,
//    },
    shared_libs: [
        "libhidlbase",
        "libhidltransport",
        "libhwbinder",
        "liblog",
        "libutils",
        "libcutils",
    ],
    export_shared_lib_headers: [
        "libhidlbase",
        "libhidltransport",
        "libhwbinder",
        "libutils",
    ],
}

cc_library {
    name: "vendor.qti.dvr@1.0_vendor",
    defaults: ["hidl-module-defaults"],
    generated_sources: ["vendor.qti.dvr@1.0_genc++"],
    generated_headers: ["vendor.qti.dvr@1.0_genc++_headers"],
    export_generated_headers: ["vendor.qti.dvr@1.0_genc++_headers"],
    vendor: true,
    shared_libs: [
        "libhidlbase",
        "libhidltransport",
        "libhwbinder",
        "liblog",
        "libutils",
        "libcutils",
    ],
    export_shared_lib_headers: [
        "libhidlbase",
        "libhidltransport",
        "libhwbinder",
        "libutils",
    ],
}
